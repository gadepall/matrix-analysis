# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UxME2m7Ksw-vSXHy2BysYTIXAs2PYyyn
"""

import numpy as np
import matplotlib.pyplot as plt

def are_lines_concurrent(m1, c1, m2, c2, m3, c3):
    # Create matrices for the coefficients of the three lines
    A = np.array([[m1, -1], [m2, -1], [m3, -1]])
    b = np.array([-c1, -c2, -c3])

    # Solve the system of equations to find the intersection point
    intersection_point = np.linalg.lstsq(A, b, rcond=None)[0]

    # Extract x and y coordinates of the intersection point
    x_intersection, y_intersection = intersection_point

    # Check if the intersection point satisfies all three line equations
    if np.isclose(m1 * x_intersection + c1, y_intersection) and \
       np.isclose(m2 * x_intersection + c2, y_intersection) and \
       np.isclose(m3 * x_intersection + c3, y_intersection):
        return True, intersection_point
    else:
        return False, None

# Example usage
m1 = 2
c1 = 3
m2 = -3
c2 = 3
m3 = 0.5
c3 = 3

result, intersection_point = are_lines_concurrent(m1, c1, m2, c2, m3, c3)

if result:
    # Compute the expression in matrix form
    expression_result = m1 * (c2 - c3) + m2 * (c3 - c1) + m3 * (c1 - c2)
    print("The expression m1(c2-c3) + m2(c3-c1) + m3(c1-c2) evaluates to:", expression_result)

    # Cocurrent point
    x_concurrent = 0
    y_concurrent = 3

    # Plot the graph of the three lines and the intersection point
    x = np.linspace(-10, 10, 100)
    y1 = m1 * x + c1
    y2 = m2 * x + c2
    y3 = m3 * x + c3

    plt.figure()
    plt.plot(x, y1, label='y = {}x + {}'.format(m1, c1))
    plt.plot(x, y2, label='y = {}x + {}'.format(m2, c2))
    plt.plot(x, y3, label='y = {}x + {}'.format(m3, c3))

    plt.scatter(*intersection_point, color='red', label='Intersection Point')
    plt.xlabel('x')
    plt.ylabel('y')
    plt.legend()
    plt.text(0,5,'C(0,3)')
    plt.grid(True)
    plt.axhline(0, color='black', lw=0.5)
    plt.axvline(0, color='black', lw=0.5)
    plt.title('Graph of Three Concurrent Lines')
    plt.show()
else:
    print("The lines are not concurrent.")